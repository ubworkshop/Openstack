#!/usr/bin/env python
# Follow up author : wxl
'''Python module to get ioload and get
results that can then be used by Zabbix.'''
import os
import commands
import re
import yum

def check_version():
    yb = yum.YumBase()
    pkgs = yb.rpmdb.returnPackages()
    for pkg in pkgs:
        if pkg.name == 'sysstat':
            version = pkg.version
    versionsplit = version.split(".")
    if int(versionsplit[0]) > 9:
        return 13
    elif int(versionsplit[0]) < 9:
        return 11
    else:
        if int(versionsplit[1]) == 1:
            if int(versionsplit[2]) > 1:
                return 13
            else:
                return 11
        else:
            return 11

def push_disk_status(zabbix_server, hostname, bit):
    status, data = commands.getstatusoutput('timeout 3 iostat -x 1 2')
    lines = data.split("\n")

    disktables = []
    disks = os.popen("ls -l /dev/[sv]d* | awk '{print $NF}' | sed 's/[0-9]//g' | uniq").readlines()
    for disk in disks:
        diskname = disk.strip('\n')
        diskshortname = diskname[5:]
        disktables.append({"name": diskshortname, "time": 0})

    for line in lines:

        for disktable in disktables:
            if re.search(disktable['name'], line):
                disktable["time"] += 1

            if disktable["time"] == 2 and re.search(disktable['name'], line):
                keyvalues = line.split()
                sendtable = [
                    {"key": "r/s", "value": keyvalues[3]},
                    {"key": "w/s", "value": keyvalues[4]},
                    {"key": "rkB/s", "value": keyvalues[5]},
                    {"key": "wkB/s", "value": keyvalues[6]},
                    {"key": "avgrq-sz", "value": keyvalues[7]},
                    {"key": "avgqu-sz", "value": keyvalues[8]},
                    {"key": "await", "value": keyvalues[9]},
                    {"key": "%util", "value": keyvalues[bit]},
                ]
                for send in sendtable:
                    for zbxs in zabbix_server.split(','):
                        sendcmd = "timeout 5 zabbix_sender -z %s -s %s -k \"system.load.iostat[%s,%s]\" -o %s" % (zbxs, hostname, disktable['name'], send['key'], send['value'])
                        status, data = commands.getstatusoutput(sendcmd)
    return status

if __name__ == "__main__":
    status, zabbix_server = commands.getstatusoutput('cat /etc/zabbix/zabbix_agentd.conf | grep ^Server= | cut -d "=" -f 2')
    status, hostname= commands.getstatusoutput('hostname -f')
    bit = check_version()
    print push_disk_status(zabbix_server, hostname, bit)
