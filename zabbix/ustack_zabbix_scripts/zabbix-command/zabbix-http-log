#!/bin/bash
#####################################
##  http log script for zabbix 
##     written by zhangxian
##      on 2016-03-22 23:30
####################################

log_time1=$(date -d '1 min ago' +'%Y-%m-%d %H:%M:')
log_time2=$(date -d '1 min ago' +'%d/%b/%Y:%H:%M:')
status_4XX_flag_list='HTTP/1.[0-9]" status: 4[0-9]*;HTTP/1.[0-9]" 4[0-9]*;HTTP 4[0-9]*'
status_5XX_flag_list='HTTP/1.[0-9]" status: 5[0-9]*;HTTP/1.[0-9]" 5[0-9]*;HTTP 5[0-9]*'

function usage(){
  echo "Usage: sh $0 service status"
  echo "       service:     show the http service,you can input horizon/keystone-admin"
  echo "                    /cinder-api/nova-api/glance-api/neutron-server "
  echo "       status:      show the http status,you can input 4XX/5XX"
  echo "       version:     show the version"
  echo "       help:        show the usage"
  echo "Example: sh $0 nova-api 4XX"
  echo "Written by Zhangxian"
  exit 0;
}

function version(){
  echo "Version 2.0"
  exit 0;
}

function help(){
  usage;
}

function get_log_file(){
   local service=$1
   local log_file=""
   case $service in
     horizon) log_file=/var/log/httpd/horizon_access.log;;
     keystone_admin) log_file=/var/log/httpd/keystone_wsgi_admin_access.log;;
     nova-api) log_file=/var/log/nova/nova-api.log;;
     cinder-api) log_file=/var/log/cinder/api.log;;
     glance-api) log_file=/var/log/glance/api.log;;
     neutron-server) log_file=/var/log/neutron/server.log;;
     *) usage;;
   esac
   echo "${log_file}"
}

function get_log_status(){
   local status=$1
   case ${status} in
     4XX|4xx) status_flag=${status_4XX_flag_list};;
     5XX|5xx) status_flag=${status_5XX_flag_list};;
     *) usage;;
   esac
   echo "${status_flag}";
}

function get_status_by_service() {
  local service=$1
  local status=$2
  local log_file=$(get_log_file ${service})
  local status_flag=$(get_log_status ${status})
  local log_date_result=$(grep "${log_time1}\|${log_time2}" "${log_file}" 2>/dev/null)
  if [ ! -z "${log_date_result}" ];then
    status=$(echo "${status_flag}"|sed 's#;#\\|#g')
    status_count=$(echo "${log_date_result}"|grep -c "${status}")
  else
     status_count=0;
  fi
  echo "${status_count}"
}

if [ $# -ne 2 ];then
  usage;
fi

service=$1
status=$2
get_status_by_service ${service} ${status}

