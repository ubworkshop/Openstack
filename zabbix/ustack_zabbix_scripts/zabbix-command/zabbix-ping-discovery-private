#!/bin/env python
# coding=utf-8
# wuxiaoliu

import sys
import json
import re

def xhelp():
    print "usage: %s <lb|db|mq|api|mc|mon|net|sata|hyper|comp|storage> 10.0.194.[68-70] 10.0.16.[68-70] 'network option will display storage-ip,just storage role has'"% sys.argv[0]


def ip_analysis_list(ips):
    ip_lists = []
    ip_group = ips.split(".")
    ip_start = ".".join(ip_group[:3])+"."
    ip_ends = ip_group[3].strip("[]").split(",")
    for i in ip_ends:
        if "-" in i:
            num_start = int(i.split("-")[0])
            num_end = int(i.split("-")[1]) + 1
            ip_list = [ip_start + str(i) for i in range(num_start, num_end)]
            ip_lists.extend(ip_list)
        else:
            ip_lists.append(ip_start + i)
    return ip_lists


def ip_analysis_json_comp(ips_lists,role,network):
    if role == 'storage':
        storage_ip = ip_analysis_list(network)
        for ip2 in storage_ip:
            ipcheck(ip2)
        network_str = network.split(".")[0] + '.' + network.split(".")[1] + '.' + network.split(".")[2]
        group_ips = []
        for ip in ips_lists:
            ipcheck(ip)
            TAG = role + '_' + ip.split(".")[3]
            STORAGE = network_str + '.' + ip.split(".")[3]
            ip_dict = {
                "{#TAG}": TAG,
                "{#STORAGE_IP}": STORAGE,
                "{#MANAGEMENT_IP}": ip,
            }
            group_ips.append(ip_dict)

        print  json.dumps({"data": group_ips}, indent=4)
    else:
        print 'Error ! Just storage role can input  3 parameter !'
        xhelp()


def ip_analysis_json(ips_lists,role):
    xmap = {'lb','db','mq','api','mc','mon','net','sata','hyper','comp','storage'}
    if role in xmap:
        group_ips = []
        for ip in ips_lists:
            ipcheck(ip)
            TAG = role + '_' + ip.split(".")[3]
            ip_dict = {
                "{#TAG}": TAG,
                "{#MANAGEMENT_IP}": ip,
            }
            group_ips.append(ip_dict)

        print  json.dumps({"data": group_ips}, indent=4)
    else:
        print 'Error ! you input role error !'
        xhelp()


def ipcheck(ip):
    p = re.compile('^((25[0-5]|2[0-4]\d|[01]?\d\d?)\.){3}(25[0-5]|2[0-4]\d|[01]?\d\d?)$')
    if p.match(ip):
        return 0
    else:
        print 'Error ! You need correct network ip addr !'
        xhelp()
        sys.exit()


if __name__ == '__main__':
    if len(sys.argv) == 4:  #three parameter
        p = ip_analysis_list(sys.argv[2])
        ip_analysis_json_comp(p,sys.argv[1],sys.argv[3])
    elif len(sys.argv) == 3:  #two parameter
        p = ip_analysis_list(sys.argv[2])
        ip_analysis_json(p,sys.argv[1])
    else:
        print "Error ! You input parameter nums Error !"
        xhelp()

