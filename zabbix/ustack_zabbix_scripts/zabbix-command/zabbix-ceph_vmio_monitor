#!/bin/bash
# author: tianqing
# email: tianqing@unitedstack.com
# version: v0.0.7
  
# test file size
file_size=5G
# test file name
file_name=/tmp/tmp_test
# fio block size
fio_bs=4k
# the directory for fio output file
fio_output_file=/tmp/test_output
# seconds for fio run
fio_run_time=30
# seconds for fio timeout
fio_timeout=40
# iops that limit fio
fio_rate_iops=100
# io depth for fio
fio_io_depth=4
# whether log to syslog
log_to_syslog=true
# whether open debug
#debug=true
debug=false
if [[ $debug == true ]]
then
   set -x
fi

runstatus=$(ps -ef | grep fio | wc -l)
 if [ $runstatus -gt 1 ];then
  echo "0 0 0 0 0" > /tmp/ceph-iostat
  exit;
 fi

function log_msg()
{
   level=$1
   msg=$2
   if [[ $log_to_syslog == true ]]
      logger -p local0.$level "$msg"
   then
      :
   fi
}
  
function run_fio()
{
   log_msg info "run fio test in $fio_run_time"
   timeout $fio_timeout fio -ioengine=libaio -rw=randwrite -direct=1 -size=${file_size} \
-bs=$fio_bs -thread -iodepth=$fio_io_depth -filename=${file_name} -norandommap \
-runtime=$fio_run_time -rate_iops=$fio_rate_iops --output $fio_output_file -name="test" \
1>/dev/null
}
function parse_fio_report()
{
   if [[ ! -f $fio_output_file ]]
   then
      echo "Error, no fio file $fio_out_file"
      exit
   fi
   raw_iops_bw=`cat $fio_output_file | grep iops`
   raw_lat=`cat $fio_output_file | grep " lat " | grep "stdev"`
   iops=`echo $raw_iops_bw | awk -F 'iops=' '{print $2}'| awk -F ',' '{print $1}'`
   bw=`echo $raw_iops_bw| awk -F 'bw=' '{print $2}' | awk -F ',' '{print $1}' | awk -F 'B' '{print $1}'`
   lat_max=`echo $raw_lat | awk -F"=" '{print $3}' | awk -F"," '{print $1}'`
   lat_avg=`echo $raw_lat | awk -F"=" '{print $4}' | awk -F"," '{print $1}'`
   lat_stdev=`echo $raw_lat | awk -F"=" '{print $5}'` 
   
   if [[ "x$iops" == "x" ]]
   then
       # fio run error
       log_msg error "parse_fio_report return -1"
       echo "Error, fio parse error"
   else
       log_msg info "parse_fio_report return $iops"
       echo "$bw $iops $lat_max $lat_avg $lat_stdev"
   fi
}
function rm_fio_report()
{
   if [[ -f $fio_output_file ]]
   then
      rm $fio_output_file
   fi
}
function rm_file()
{
   rm -f ${file_name}
}
function main()
{
   run_fio
   parse_fio_report
   rm_file
}
main
